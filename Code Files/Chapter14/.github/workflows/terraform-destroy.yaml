name: Terraform-Destroy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true

env:
  TERRAFORM_VERSION: '1.5.7'

jobs:

  terraform-destroy:
    runs-on: ubuntu-latest

    environment:
      name: ${{ github.event.inputs.environment }}

    steps:
    - uses: actions/checkout@v3

    - id: setup
      name: Setup `terraform`
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}
        terraform_wrapper: false

    - name: Create Secret File for Backend
      env:
        GOOGLE_BACKEND_CREDENTIALS: ${{ secrets.GOOGLE_BACKEND_CREDENTIALS }}
      working-directory: ${{ vars.TERRAFORM_WORKING_DIRECTORY }}
      run: |
        # Create a local file with the secret value
        echo -n "$GOOGLE_BACKEND_CREDENTIALS" > gcp-backend.json

    - name: Create Secret File for Terraform
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      working-directory: ${{ vars.TERRAFORM_WORKING_DIRECTORY }}
      run: |
        # Create a local file with the secret value
        echo -n "$GOOGLE_APPLICATION_CREDENTIALS" > gcp-terraform.json

    - id: destroy
      name: Terraform Destroy
      env:
        GOOGLE_BACKEND_CREDENTIALS: gcp-backend.json
        GOOGLE_APPLICATION_CREDENTIALS: gcp-terraform.json
        BACKEND_BUCKET_NAME: ${{ vars.BACKEND_BUCKET_NAME }}
        BACKEND_KEY: ${{ vars.APPLICATION_NAME }}-${{ vars.ENVIRONMENT_NAME }}
        TF_VAR_gcp_organization: ${{ vars.GCP_ORGANIZATION_ID }}
      working-directory: ${{ vars.TERRAFORM_WORKING_DIRECTORY }}
      run: |
        terraform init \
          -backend-config='bucket='$BACKEND_BUCKET_NAME \
          -backend-config='prefix='$BACKEND_KEY

        terraform destroy -auto-approve
